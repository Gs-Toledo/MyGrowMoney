name: Backend CI Pipeline

on:
  # Manual trigger
  workflow_dispatch:

  push:
    branches:
      - '*'

  pull_request:
    branches:
      - '*'

jobs:
  front-end:
    name: Front-end
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Cache Node.js dependencies for testing
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.cache/npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      # Step 4: Install dependencies
      - name: Install dependencies
        working-directory: ./Front-end
        run: npm ci

      # # Step 5: Run frontend tests
      # - name: Test
      #   working-directory: ./Front-end
      #   run: npm run test

      # Step 6: Build the frontend
      - name: Build
        working-directory: ./Front-end
        run: npm run build

  back-end:
    name: Back-end
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 21 for Spring Boot
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'microsoft'

      # Step 3: Cache Maven dependencies for build
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/maven
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      # Step 4: Build the backend
      - name: Build backend
        working-directory: ./Back-end
        run: mvn clean install